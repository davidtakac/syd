#!/usr/bin/env python
import PySimpleGUI as sg
import subprocess
import youtube_dl
import os
import threading
import math
import logging

class Syd:
    _APP_NAME = 'syd-music'
    #events
    _BEGIN = 'begin'
    _DL_PROGRESS = 'dl_progress'
    _CONVERT_BEGIN = 'convert_begin'
    _CONVERT_END = 'convert_end'

    def __init__(self):
        #GUI
        sg.theme('LightGreen')
        layout = [  
            [sg.Text('YouTube link')],
            [sg.InputText(key='url')], 
            [sg.Button('Download MP3', key='dl', bind_return_key=True), sg.Button('View downloaded songs', key='view')], 
            [sg.Text(key='status', size=(24,1))]
        ]
        self._window = sg.Window('syd-music', layout)
        #YoutubeDL
        self._DOWNLOAD_PATH = '{}/Music/{}/'.format(os.environ['HOME'], self._APP_NAME)
        opts = {
            'outtmpl': '{}%(title)s.%(ext)s'.format(self._DOWNLOAD_PATH),
            'format': 'bestaudio/best',
            'ignoreerrors': 'true',
            'progress_hooks': [self._dl_progress_hook],
            'postprocessors': [{
                'key': 'FFmpegExtractAudio',
                'preferredcodec': 'mp3',
                'preferredquality': '128',
            }],
        }
        self._ytdl = youtube_dl.YoutubeDL(opts)

    def start(self):
        while True: 
            event, values = self._window.read()
            if event == 'dl':
                self._download(values['url'])
            if event == self._BEGIN:
                self._on_begin()
            if event == self._DL_PROGRESS:
                self._on_dl_progress(values[self._DL_PROGRESS])
            if event == self._CONVERT_BEGIN: 
                self._on_convert_begin()
            if event == self._CONVERT_END:
                self._on_done()
            if event == 'view':
                subprocess.Popen(['xdg-open', self._DOWNLOAD_PATH])
            if event == sg.WINDOW_CLOSED:
                break

        self._window.close()

    def _download(self, url):
        if not url.startswith('https://www.youtube.com/'): 
            self._on_url_invalid()
        else:
            threading.Thread(
                target=self._dl_worker, 
                args=(url,), 
                daemon=True
            ).start()

    def _event(self, key, value=True):
        self._window.write_event_value(key, value)

    def _on_begin(self):
        self._window['dl'].update(disabled=True)
        self._window['status'].update('Downloading...')

    def _on_dl_progress(self, perc_str):
        self._window['status'].update('Downloading: {}'.format(perc_str))

    def _on_convert_begin(self):
        self._window['status'].update('Converting to MP3...')

    def _on_done(self):
        self._window['status'].update('Done!')
        self._window['dl'].update(disabled=False)

    def _on_url_invalid(self):
        self._window['status'].update('That\'s not a YouTube link.')

    def _dl_worker(self, url):
        self._event(self._BEGIN)
        self._ytdl.download([url])
        self._event(self._CONVERT_END)

    def _dl_progress_hook(self, prog):
        status = prog['status']
        if status == 'downloading':
            self._event(self._DL_PROGRESS, prog['_percent_str'])
        if status == 'finished':
            self._event(self._CONVERT_BEGIN)

if __name__ == '__main__':
    Syd().start()